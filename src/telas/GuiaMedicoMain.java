/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import controleBusca.ControleBusca;
import controleBusca.ControleBuscaMedico;
import guiamedico.Busca;
import guiamedico.Cliente;
import guiamedico.Clinica;
import guiamedico.Hospital;
import guiamedico.Instituicao;
import guiamedico.Medico;
import java.awt.event.KeyEvent;
import static java.lang.System.exit;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Action;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Thales
 */
public class GuiaMedicoMain extends javax.swing.JFrame {

    /**
     * Creates new form GuiaMedicoMain
     */
    public GuiaMedicoMain() {
        initComponents();
        jpTabPesquisaCliente.setVisible(false);
        jpTabPesquisaNaoCliente.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgPesquisaNome = new javax.swing.ButtonGroup();
        jpLogo = new javax.swing.JPanel();
        lbLogoImg = new javax.swing.JLabel();
        jpIdentifica = new javax.swing.JTabbedPane();
        jpNaoCliente = new javax.swing.JPanel();
        lbPlano = new javax.swing.JLabel();
        cbPlano = new javax.swing.JComboBox();
        jpPesqueisaNaoCliente = new javax.swing.JPanel();
        jpTabPesquisaNaoCliente = new javax.swing.JTabbedPane();
        jpPesquisaDetalhadaNaoCliente = new javax.swing.JPanel();
        lbAtendimentoNaoCliente = new javax.swing.JLabel();
        cbAtendimentoNaoCliente = new javax.swing.JComboBox();
        lbCidadeNaoCliente = new javax.swing.JLabel();
        cbCidadeNaoCliente = new javax.swing.JComboBox();
        lbEspecialidadeNaoCliente = new javax.swing.JLabel();
        cbEspecialidadeNaoCliente = new javax.swing.JComboBox();
        lbRegiaoNaoCliente = new javax.swing.JLabel();
        cbRegiaoNaoCliente = new javax.swing.JComboBox();
        btPesquisaDetalhadaNaoCliente1 = new javax.swing.JButton();
        jpPesquisaNomeNaoCliente = new javax.swing.JPanel();
        lbNomeNaoCliente = new javax.swing.JLabel();
        lbNomeCidadeNaoCliente = new javax.swing.JLabel();
        cbCidadeNomeNaoCliente = new javax.swing.JComboBox();
        rbtContemNaoCliente = new javax.swing.JRadioButton();
        rbtPrimeiroNomeNaoCliente = new javax.swing.JRadioButton();
        tfNomeNaoCliente = new javax.swing.JTextField();
        btPesquisaDetalhadaNaoCliente = new javax.swing.JButton();
        cbEspecialidadeNomeNaoCliente = new javax.swing.JComboBox();
        lbEspecialidadeNomeNaoCliente1 = new javax.swing.JLabel();
        jpCliente = new javax.swing.JPanel();
        lbCartao = new javax.swing.JLabel();
        btValidar = new javax.swing.JButton();
        jtfCartao = new javax.swing.JFormattedTextField();
        jlNomePaciente = new javax.swing.JLabel();
        jlCodCartao = new javax.swing.JLabel();
        jlTipoPlano = new javax.swing.JLabel();
        jpPesquisaCliente = new javax.swing.JPanel();
        jpTabPesquisaCliente = new javax.swing.JTabbedPane();
        jpPesquisaDetalhadaCliente = new javax.swing.JPanel();
        lbAtendimentoCliente = new javax.swing.JLabel();
        cbAtendimentoCliente = new javax.swing.JComboBox();
        lbCidadeCliente = new javax.swing.JLabel();
        cbCidadeCliente = new javax.swing.JComboBox();
        lbEspecialidadeCliente = new javax.swing.JLabel();
        cbEspecialidadeCliente = new javax.swing.JComboBox();
        lbRegiaoCliente = new javax.swing.JLabel();
        cbRegiaoCliente = new javax.swing.JComboBox();
        btPesquisaDetalhadaCliente = new javax.swing.JButton();
        jpPesquisaNome = new javax.swing.JPanel();
        lbNomeCliente = new javax.swing.JLabel();
        lbNomeCidadeCliente = new javax.swing.JLabel();
        cbCidadeNomeCliente = new javax.swing.JComboBox();
        rbtContemCliente = new javax.swing.JRadioButton();
        rbtPrimeiroNomeCliente = new javax.swing.JRadioButton();
        tfNomeCliente = new javax.swing.JTextField();
        btPesquisaDetalhadaCliente1 = new javax.swing.JButton();
        lbEspecialidadeNomeNaoCliente2 = new javax.swing.JLabel();
        cbEspecialidadeNomeCliente = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jpSair = new javax.swing.JPanel();
        jbSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Guia MÃ©dico");
        setBackground(new java.awt.Color(255, 255, 255));

        jpLogo.setBackground(new java.awt.Color(255, 255, 255));

        lbLogoImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Logo Medicina.-800x800.jpg"))); // NOI18N
        lbLogoImg.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jpLogoLayout = new javax.swing.GroupLayout(jpLogo);
        jpLogo.setLayout(jpLogoLayout);
        jpLogoLayout.setHorizontalGroup(
            jpLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 658, Short.MAX_VALUE)
            .addGroup(jpLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lbLogoImg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE))
        );
        jpLogoLayout.setVerticalGroup(
            jpLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 157, Short.MAX_VALUE)
            .addGroup(jpLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpLogoLayout.createSequentialGroup()
                    .addGap(14, 14, 14)
                    .addComponent(lbLogoImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(15, 15, 15)))
        );

        jpIdentifica.setBackground(new java.awt.Color(255, 255, 255));
        jpIdentifica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpIdentificaMouseClicked(evt);
            }
        });

        jpNaoCliente.setBackground(new java.awt.Color(255, 255, 255));
        jpNaoCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpNaoClienteMouseClicked(evt);
            }
        });

        lbPlano.setText("Plano:");

        cbPlano.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>", "Basico", "Completo" }));
        cbPlano.setToolTipText("Selecione o tipo de plano abaixo em que deseja pesquisar.");
        cbPlano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPlanoActionPerformed(evt);
            }
        });

        jpPesqueisaNaoCliente.setBackground(new java.awt.Color(255, 255, 255));
        jpPesqueisaNaoCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpPesqueisaNaoClienteMouseClicked(evt);
            }
        });

        jpTabPesquisaNaoCliente.setBackground(new java.awt.Color(255, 255, 255));
        jpTabPesquisaNaoCliente.setAutoscrolls(true);

        jpPesquisaDetalhadaNaoCliente.setBackground(new java.awt.Color(255, 255, 255));

        lbAtendimentoNaoCliente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbAtendimentoNaoCliente.setText("*Tipo de Atendimento:");

        cbAtendimentoNaoCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>", "Hospital", "Clinica" }));
        cbAtendimentoNaoCliente.setToolTipText("Selecione o tipo de atendimento abaixo em que deseja pesquisar.");
        cbAtendimentoNaoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAtendimentoNaoClienteActionPerformed(evt);
            }
        });

        lbCidadeNaoCliente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbCidadeNaoCliente.setText("Cidade:");

        cbCidadeNaoCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>", "Sorocaba", "Itu", "Votorantim" }));
        cbCidadeNaoCliente.setToolTipText("Selecione uma das cidades abaixo em que deseja pesquisar.");
        cbCidadeNaoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCidadeNaoClienteActionPerformed(evt);
            }
        });

        lbEspecialidadeNaoCliente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbEspecialidadeNaoCliente.setText("Especialidade:");

        cbEspecialidadeNaoCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>", "Endocrinologia", "Ortopedia", "Cirurgia", "Oftalmologia", "Cardiologia" }));
        cbEspecialidadeNaoCliente.setToolTipText("Selecione uma das especialidades abaixo em que deseja pesquisar.");
        cbEspecialidadeNaoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEspecialidadeNaoClienteActionPerformed(evt);
            }
        });

        lbRegiaoNaoCliente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbRegiaoNaoCliente.setText("RegiÃ£o:");

        cbRegiaoNaoCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>" }));
        cbRegiaoNaoCliente.setToolTipText("Selecione uma das regiÃµes abaixo em que deseja pesquisar.");
        cbRegiaoNaoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRegiaoNaoClienteActionPerformed(evt);
            }
        });

        btPesquisaDetalhadaNaoCliente1.setText("Pesquisar");
        btPesquisaDetalhadaNaoCliente1.setAlignmentY(0.0F);
        btPesquisaDetalhadaNaoCliente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaDetalhadaNaoCliente1ActionPerformed(evt);
            }
        });
        btPesquisaDetalhadaNaoCliente1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btPesquisaDetalhadaNaoCliente1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jpPesquisaDetalhadaNaoClienteLayout = new javax.swing.GroupLayout(jpPesquisaDetalhadaNaoCliente);
        jpPesquisaDetalhadaNaoCliente.setLayout(jpPesquisaDetalhadaNaoClienteLayout);
        jpPesquisaDetalhadaNaoClienteLayout.setHorizontalGroup(
            jpPesquisaDetalhadaNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPesquisaDetalhadaNaoClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPesquisaDetalhadaNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btPesquisaDetalhadaNaoCliente1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbAtendimentoNaoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbAtendimentoNaoCliente, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbEspecialidadeNaoCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbEspecialidadeNaoCliente))
                .addGroup(jpPesquisaDetalhadaNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPesquisaDetalhadaNaoClienteLayout.createSequentialGroup()
                        .addGap(0, 23, Short.MAX_VALUE)
                        .addGroup(jpPesquisaDetalhadaNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbRegiaoNaoCliente)
                            .addGroup(jpPesquisaDetalhadaNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbCidadeNaoCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbRegiaoNaoCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(325, Short.MAX_VALUE))
                    .addGroup(jpPesquisaDetalhadaNaoClienteLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lbCidadeNaoCliente)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jpPesquisaDetalhadaNaoClienteLayout.setVerticalGroup(
            jpPesquisaDetalhadaNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPesquisaDetalhadaNaoClienteLayout.createSequentialGroup()
                .addGroup(jpPesquisaDetalhadaNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbAtendimentoNaoCliente)
                    .addComponent(lbCidadeNaoCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPesquisaDetalhadaNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbAtendimentoNaoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCidadeNaoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPesquisaDetalhadaNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbEspecialidadeNaoCliente)
                    .addComponent(lbRegiaoNaoCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPesquisaDetalhadaNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbEspecialidadeNaoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbRegiaoNaoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btPesquisaDetalhadaNaoCliente1)
                .addContainerGap())
        );

        jpTabPesquisaNaoCliente.addTab("Pesquisa Detalhada", jpPesquisaDetalhadaNaoCliente);

        jpPesquisaNomeNaoCliente.setBackground(new java.awt.Color(255, 255, 255));

        lbNomeNaoCliente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbNomeNaoCliente.setText("*Nome:");

        lbNomeCidadeNaoCliente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbNomeCidadeNaoCliente.setText("*Cidade:");

        cbCidadeNomeNaoCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>", "Sorocaba", "Itu", "Votorantim" }));
        cbCidadeNomeNaoCliente.setToolTipText("Escolha uma das cidades abaixo em que deseja pesquisar.");
        cbCidadeNomeNaoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCidadeNomeNaoClienteActionPerformed(evt);
            }
        });

        btgPesquisaNome.add(rbtContemNaoCliente);
        rbtContemNaoCliente.setText("Que contenha");
        rbtContemNaoCliente.setToolTipText("Selecione esta opÃ§Ã£o para procurar por mÃ©dico(s) que o nome contenha o que foi informando no campo ao lado.");
        rbtContemNaoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtContemNaoClienteActionPerformed(evt);
            }
        });

        btgPesquisaNome.add(rbtPrimeiroNomeNaoCliente);
        rbtPrimeiroNomeNaoCliente.setText("Primeiro(s) nome(s)");
        rbtPrimeiroNomeNaoCliente.setToolTipText("Selecione esta opÃ§Ã£o para procurar mÃ©dico(s) pelo(s) primeiro(s) nome(s) informado(s) no campo ao lado.");
        rbtPrimeiroNomeNaoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtPrimeiroNomeNaoClienteActionPerformed(evt);
            }
        });

        tfNomeNaoCliente.setColumns(15);
        tfNomeNaoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNomeNaoClienteActionPerformed(evt);
            }
        });
        tfNomeNaoCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNomeNaoClienteKeyTyped(evt);
            }
        });

        btPesquisaDetalhadaNaoCliente.setText("Pesquisar");
        btPesquisaDetalhadaNaoCliente.setAlignmentY(0.0F);
        btPesquisaDetalhadaNaoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaDetalhadaNaoClienteActionPerformed(evt);
            }
        });

        cbEspecialidadeNomeNaoCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>", "Endocrinologia", "Ortopedia", "Cirurgia", "Oftalmologia", "Cardiologia" }));

        lbEspecialidadeNomeNaoCliente1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbEspecialidadeNomeNaoCliente1.setText("Especialidade:");

        javax.swing.GroupLayout jpPesquisaNomeNaoClienteLayout = new javax.swing.GroupLayout(jpPesquisaNomeNaoCliente);
        jpPesquisaNomeNaoCliente.setLayout(jpPesquisaNomeNaoClienteLayout);
        jpPesquisaNomeNaoClienteLayout.setHorizontalGroup(
            jpPesquisaNomeNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPesquisaNomeNaoClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPesquisaNomeNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfNomeNaoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                    .addGroup(jpPesquisaNomeNaoClienteLayout.createSequentialGroup()
                        .addGroup(jpPesquisaNomeNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNomeNaoCliente)
                            .addGroup(jpPesquisaNomeNaoClienteLayout.createSequentialGroup()
                                .addGroup(jpPesquisaNomeNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbNomeCidadeNaoCliente)
                                    .addGroup(jpPesquisaNomeNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbCidadeNomeNaoCliente, 0, 140, Short.MAX_VALUE)
                                        .addComponent(btPesquisaDetalhadaNaoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(71, 71, 71)
                                .addGroup(jpPesquisaNomeNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbEspecialidadeNomeNaoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbEspecialidadeNomeNaoCliente1))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(6, 6, 6)
                .addComponent(rbtContemNaoCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtPrimeiroNomeNaoCliente)
                .addGap(10, 10, 10))
        );
        jpPesquisaNomeNaoClienteLayout.setVerticalGroup(
            jpPesquisaNomeNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPesquisaNomeNaoClienteLayout.createSequentialGroup()
                .addComponent(lbNomeNaoCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPesquisaNomeNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtContemNaoCliente)
                    .addComponent(rbtPrimeiroNomeNaoCliente)
                    .addComponent(tfNomeNaoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPesquisaNomeNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNomeCidadeNaoCliente)
                    .addComponent(lbEspecialidadeNomeNaoCliente1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPesquisaNomeNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCidadeNomeNaoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbEspecialidadeNomeNaoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(btPesquisaDetalhadaNaoCliente)
                .addContainerGap())
        );

        jpTabPesquisaNaoCliente.addTab("Pesquisa Por Nome", jpPesquisaNomeNaoCliente);

        javax.swing.GroupLayout jpPesqueisaNaoClienteLayout = new javax.swing.GroupLayout(jpPesqueisaNaoCliente);
        jpPesqueisaNaoCliente.setLayout(jpPesqueisaNaoClienteLayout);
        jpPesqueisaNaoClienteLayout.setHorizontalGroup(
            jpPesqueisaNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpTabPesquisaNaoCliente)
        );
        jpPesqueisaNaoClienteLayout.setVerticalGroup(
            jpPesqueisaNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPesqueisaNaoClienteLayout.createSequentialGroup()
                .addComponent(jpTabPesquisaNaoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpNaoClienteLayout = new javax.swing.GroupLayout(jpNaoCliente);
        jpNaoCliente.setLayout(jpNaoClienteLayout);
        jpNaoClienteLayout.setHorizontalGroup(
            jpNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpNaoClienteLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lbPlano)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbPlano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jpPesqueisaNaoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpNaoClienteLayout.setVerticalGroup(
            jpNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpNaoClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpNaoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbPlano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPlano))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpPesqueisaNaoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(106, 106, 106))
        );

        jpIdentifica.addTab("NÃ£o Sou Cliente", jpNaoCliente);

        jpCliente.setBackground(new java.awt.Color(255, 255, 255));
        jpCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpClienteMouseClicked(evt);
            }
        });

        lbCartao.setText("CÃ³digo do CartÃ£o:");

        btValidar.setText("Validar");
        btValidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btValidarActionPerformed(evt);
            }
        });
        btValidar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btValidarKeyPressed(evt);
            }
        });

        try {
            jtfCartao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtfCartao.setToolTipText("(4 caracteres e apenas nÃºmeros)");
        jtfCartao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCartaoActionPerformed(evt);
            }
        });
        jtfCartao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCartaoKeyPressed(evt);
            }
        });

        jpPesquisaCliente.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jpPesquisaClienteLayout = new javax.swing.GroupLayout(jpPesquisaCliente);
        jpPesquisaCliente.setLayout(jpPesquisaClienteLayout);
        jpPesquisaClienteLayout.setHorizontalGroup(
            jpPesquisaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );
        jpPesquisaClienteLayout.setVerticalGroup(
            jpPesquisaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 159, Short.MAX_VALUE)
        );

        jpTabPesquisaCliente.setBackground(new java.awt.Color(255, 255, 255));
        jpTabPesquisaCliente.setAutoscrolls(true);
        jpTabPesquisaCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpTabPesquisaClienteMouseClicked(evt);
            }
        });

        jpPesquisaDetalhadaCliente.setBackground(new java.awt.Color(255, 255, 255));

        lbAtendimentoCliente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbAtendimentoCliente.setText("*Tipo de Atendimento:");

        cbAtendimentoCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>", "Hospital", "Clinica" }));
        cbAtendimentoCliente.setToolTipText("Selecione o tipo de atendimento abaixo em que deseja pesquisar.");
        cbAtendimentoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAtendimentoClienteActionPerformed(evt);
            }
        });

        lbCidadeCliente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbCidadeCliente.setText("Cidade:");

        cbCidadeCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>", "Sorocaba", "Itu", "Votorantim" }));
        cbCidadeCliente.setToolTipText("Selecione uma das cidades abaixo em que deseja pesquisar.");
        cbCidadeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCidadeClienteActionPerformed(evt);
            }
        });

        lbEspecialidadeCliente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbEspecialidadeCliente.setText("Especialidade:");

        cbEspecialidadeCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>", "Endocrinologia", "Ortopedia", "Cirurgia", "Oftalmologia", "Cardiologia" }));
        cbEspecialidadeCliente.setToolTipText("Selecione uma das especialidades abaixo em que deseja pesquisar.");
        cbEspecialidadeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEspecialidadeClienteActionPerformed(evt);
            }
        });

        lbRegiaoCliente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbRegiaoCliente.setText("RegiÃ£o:");

        cbRegiaoCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>" }));
        cbRegiaoCliente.setToolTipText("Selecione uma das regiÃµes abaixo em que deseja pesquisar.");
        cbRegiaoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRegiaoClienteActionPerformed(evt);
            }
        });

        btPesquisaDetalhadaCliente.setText("Pesquisar");
        btPesquisaDetalhadaCliente.setAlignmentY(0.0F);
        btPesquisaDetalhadaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaDetalhadaClienteActionPerformed(evt);
            }
        });
        btPesquisaDetalhadaCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btPesquisaDetalhadaClienteKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jpPesquisaDetalhadaClienteLayout = new javax.swing.GroupLayout(jpPesquisaDetalhadaCliente);
        jpPesquisaDetalhadaCliente.setLayout(jpPesquisaDetalhadaClienteLayout);
        jpPesquisaDetalhadaClienteLayout.setHorizontalGroup(
            jpPesquisaDetalhadaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPesquisaDetalhadaClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPesquisaDetalhadaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btPesquisaDetalhadaCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbAtendimentoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbAtendimentoCliente, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbEspecialidadeCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbEspecialidadeCliente))
                .addGap(18, 18, 18)
                .addGroup(jpPesquisaDetalhadaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbCidadeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCidadeCliente)
                    .addComponent(cbRegiaoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbRegiaoCliente))
                .addContainerGap(303, Short.MAX_VALUE))
        );
        jpPesquisaDetalhadaClienteLayout.setVerticalGroup(
            jpPesquisaDetalhadaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPesquisaDetalhadaClienteLayout.createSequentialGroup()
                .addGroup(jpPesquisaDetalhadaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbAtendimentoCliente)
                    .addComponent(lbCidadeCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPesquisaDetalhadaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbAtendimentoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCidadeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPesquisaDetalhadaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbEspecialidadeCliente)
                    .addComponent(lbRegiaoCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPesquisaDetalhadaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbEspecialidadeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbRegiaoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btPesquisaDetalhadaCliente)
                .addContainerGap())
        );

        jpTabPesquisaCliente.addTab("Pesquisa Detalhada", jpPesquisaDetalhadaCliente);

        jpPesquisaNome.setBackground(new java.awt.Color(255, 255, 255));

        lbNomeCliente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbNomeCliente.setText("*Nome:");

        lbNomeCidadeCliente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbNomeCidadeCliente.setText("*Cidade:");

        cbCidadeNomeCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>", "Sorocaba", "Itu", "Votorantim" }));
        cbCidadeNomeCliente.setToolTipText("Escolha uma das cidades abaixo em que deseja pesquisar.");

        btgPesquisaNome.add(rbtContemCliente);
        rbtContemCliente.setText("Que contenha");
        rbtContemCliente.setToolTipText("Selecione esta opÃ§Ã£o para procurar por mÃ©dico(s) que o nome contenha o que foi informando no campo ao lado.");
        rbtContemCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtContemClienteActionPerformed(evt);
            }
        });

        btgPesquisaNome.add(rbtPrimeiroNomeCliente);
        rbtPrimeiroNomeCliente.setText("Primeiro(s) nome(s)");
        rbtPrimeiroNomeCliente.setToolTipText("Selecione esta opÃ§Ã£o para procurar mÃ©dico(s) pelo(s) primeiro(s) nome(s) informado(s) no campo ao lado.");
        rbtPrimeiroNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtPrimeiroNomeClienteActionPerformed(evt);
            }
        });

        tfNomeCliente.setColumns(15);
        tfNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNomeClienteActionPerformed(evt);
            }
        });
        tfNomeCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNomeClienteKeyTyped(evt);
            }
        });

        btPesquisaDetalhadaCliente1.setText("Pesquisar");
        btPesquisaDetalhadaCliente1.setAlignmentY(0.0F);
        btPesquisaDetalhadaCliente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaDetalhadaCliente1ActionPerformed(evt);
            }
        });

        lbEspecialidadeNomeNaoCliente2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbEspecialidadeNomeNaoCliente2.setText("Especialidade:");

        cbEspecialidadeNomeCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione>", "Endocrinologia", "Ortopedia", "Cirurgia", "Oftalmologia", "Cardiologia" }));

        javax.swing.GroupLayout jpPesquisaNomeLayout = new javax.swing.GroupLayout(jpPesquisaNome);
        jpPesquisaNome.setLayout(jpPesquisaNomeLayout);
        jpPesquisaNomeLayout.setHorizontalGroup(
            jpPesquisaNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPesquisaNomeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPesquisaNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfNomeCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                    .addGroup(jpPesquisaNomeLayout.createSequentialGroup()
                        .addGroup(jpPesquisaNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNomeCliente)
                            .addGroup(jpPesquisaNomeLayout.createSequentialGroup()
                                .addGroup(jpPesquisaNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbNomeCidadeCliente)
                                    .addGroup(jpPesquisaNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbCidadeNomeCliente, 0, 140, Short.MAX_VALUE)
                                        .addComponent(btPesquisaDetalhadaCliente1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(64, 64, 64)
                                .addGroup(jpPesquisaNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbEspecialidadeNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbEspecialidadeNomeNaoCliente2))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(6, 6, 6)
                .addComponent(rbtContemCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtPrimeiroNomeCliente)
                .addGap(10, 10, 10))
        );
        jpPesquisaNomeLayout.setVerticalGroup(
            jpPesquisaNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPesquisaNomeLayout.createSequentialGroup()
                .addComponent(lbNomeCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPesquisaNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtContemCliente)
                    .addComponent(rbtPrimeiroNomeCliente)
                    .addComponent(tfNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPesquisaNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPesquisaNomeLayout.createSequentialGroup()
                        .addComponent(lbNomeCidadeCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbCidadeNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpPesquisaNomeLayout.createSequentialGroup()
                        .addComponent(lbEspecialidadeNomeNaoCliente2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbEspecialidadeNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btPesquisaDetalhadaCliente1)
                .addContainerGap())
        );

        jpTabPesquisaCliente.addTab("Pesquisa Por Nome", jpPesquisaNome);

        javax.swing.GroupLayout jpClienteLayout = new javax.swing.GroupLayout(jpCliente);
        jpCliente.setLayout(jpClienteLayout);
        jpClienteLayout.setHorizontalGroup(
            jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpClienteLayout.createSequentialGroup()
                .addGroup(jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpClienteLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lbCartao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfCartao, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addGroup(jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpClienteLayout.createSequentialGroup()
                                .addComponent(jlCodCartao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlTipoPlano)
                                .addGap(149, 149, 149))
                            .addGroup(jpClienteLayout.createSequentialGroup()
                                .addComponent(jlNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(btValidar))
                    .addComponent(jpTabPesquisaCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpPesquisaCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpClienteLayout.setVerticalGroup(
            jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbCartao)
                        .addComponent(btValidar)
                        .addComponent(jtfCartao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpClienteLayout.createSequentialGroup()
                        .addComponent(jlNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlCodCartao)
                            .addComponent(jlTipoPlano))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpPesquisaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpTabPesquisaCliente))
                .addGap(84, 84, 84))
        );

        jpIdentifica.addTab("Sou Cliente", jpCliente);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("VocÃª pode consultar aqui a Rede Credenciada, para isso, digite o cÃ³digo do seu cartÃ£o ou escolha um de nossos planos caso nÃ£o seja nosso cliente.\n\nExistem duas formas de busca:\n\nBusca Detalhada: Preencha o local de atendimento  e opcionalmente, a cidade, especialidade e a regiÃ£o.\nBusca por nome: Preencha o nome do credenciado, selecione   \"Que contenha\" ou \"Primeiro(s) nome(s)\" e a cidade.\n\nApÃ³s esta etapa clique em Pesquisar para visualizar o resultado.");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setMinimumSize(new java.awt.Dimension(160, 350));
        jScrollPane1.setViewportView(jTextArea1);

        jpSair.setBackground(new java.awt.Color(255, 255, 255));

        jbSair.setText("Sair");
        jbSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSairActionPerformed(evt);
            }
        });
        jbSair.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbSairKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jpSairLayout = new javax.swing.GroupLayout(jpSair);
        jpSair.setLayout(jpSairLayout);
        jpSairLayout.setHorizontalGroup(
            jpSairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSairLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jbSair, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jpSairLayout.setVerticalGroup(
            jpSairLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSairLayout.createSequentialGroup()
                .addComponent(jbSair)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jpSair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpIdentifica, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(12, 12, 12))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jpLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(162, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jpIdentifica, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpSair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jpLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(495, 495, 495)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbtContemClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtContemClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtContemClienteActionPerformed

    private void rbtPrimeiroNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtPrimeiroNomeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtPrimeiroNomeClienteActionPerformed

    private void cbRegiaoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRegiaoClienteActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbRegiaoClienteActionPerformed

    private void tfNomeClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNomeClienteKeyTyped
        // TODO add your handling code here:
        String caracteres = "0987654321!{}@.,#;$%/()[]*\\+-=_<>-?:|Â¬Â¢Â¹Â²Â³Â§'";
        if (caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_tfNomeClienteKeyTyped

    private void jpIdentificaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpIdentificaMouseClicked
        // TODO add your handling code here:
        jpTabPesquisaCliente.setVisible(false);
        jlNomePaciente.setText("");
        jlCodCartao.setText("");
        jlTipoPlano.setText("");
        jpTabPesquisaNaoCliente.setVisible(false);
        cbPlano.setSelectedIndex(0);
        cbAtendimentoNaoCliente.setSelectedIndex(0);
        cbCidadeNaoCliente.setSelectedIndex(0);
        cbEspecialidadeNaoCliente.setSelectedIndex(0);
        cbRegiaoNaoCliente.setSelectedIndex(0);
    }//GEN-LAST:event_jpIdentificaMouseClicked

    private void btPesquisaDetalhadaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaDetalhadaClienteActionPerformed
        List<Hospital> hosp;
        List<Clinica> clin;

        if (cbAtendimentoCliente.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Insira o tipo de antendimento para fazer a busca");
        }

        String especialidade = cbEspecialidadeCliente.getSelectedItem().toString();
        String atendimento = cbAtendimentoCliente.getSelectedItem().toString();
        String cidade = cbCidadeCliente.getSelectedItem().toString();
        String zona = cbRegiaoCliente.getSelectedItem().toString();
        int codCliente = Integer.parseInt(cod);

        ControleBusca control = new ControleBusca(codCliente, 0, atendimento, especialidade, cidade, zona);
        try {
            control.runBuscaInstituicaoCliente();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        System.out.println(atendimento);
        if (atendimento.equals("Hospital")) {
            hosp = control.getHosp();
            new ResultadoInstituicao(this, hosp, null).setVisible(true);
        } else {
            if (atendimento.equals("Clinica")) {
                clin = control.getClin();
                for (Clinica c : control.getClin()) {
                    System.out.println(c.getNome());
                }
                new ResultadoInstituicao(this, null, clin).setVisible(true);
            }
        }
        // ControleBusca c = new ControleBusca(codCliente, codPlano, tpAtendimento, tpEspecialidade, city, zona);
    }//GEN-LAST:event_btPesquisaDetalhadaClienteActionPerformed

    private void jbSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSairActionPerformed
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_jbSairActionPerformed

    private void cbPlanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPlanoActionPerformed
        //String plano = cbPlano.getSelectedItem().toString();
        //System.out.printf("%s\n", plano);
        if (!(cbPlano.getSelectedItem().toString().equals("<Selecione>"))) {
            jpTabPesquisaNaoCliente.setVisible(true);
        }
    }//GEN-LAST:event_cbPlanoActionPerformed

    private void btValidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btValidarActionPerformed
        Busca b = new Busca();
        Cliente c = new Cliente(null, null, 0, 0, null, null, null, 0, 0, 0);
        if ((!(jtfCartao.getText().equals(""))) && (!(Integer.parseInt(jtfCartao.getText()) <= 0))) {
            cod = jtfCartao.getText();
            System.out.printf("%s\n", cod);
            int codCartao = Integer.parseInt(cod);
            try {
                c = b.getDadosCliente(codCartao);
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            if (c != null) {
                jpTabPesquisaCliente.setVisible(true);
                //jpIdentifica.setEnabled(false);
                jlCodCartao.setText(cod);
                jlNomePaciente.setText(c.getNome());
                if (c.getPlano() == 1) {
                    jlTipoPlano.setText("Plano BÃ¡sico");
                } else {
                    if (c.getPlano() == 2) {
                        jlTipoPlano.setText("Plano Completo");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Cliente nao encontrado");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Codigo InvÃ¡lido");
        }
        jtfCartao.setText("");
        cbAtendimentoCliente.setSelectedIndex(0);
        cbCidadeCliente.setSelectedIndex(0);
        cbEspecialidadeCliente.setSelectedIndex(0);
        cbRegiaoCliente.setSelectedIndex(0);
    }//GEN-LAST:event_btValidarActionPerformed

    private void jtfCartaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCartaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCartaoActionPerformed

    private void jpNaoClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpNaoClienteMouseClicked
        // TODO add your handling code here:
        jpNaoCliente.setEnabled(false);
    }//GEN-LAST:event_jpNaoClienteMouseClicked

    private void jpClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpClienteMouseClicked
        // TODO add your handling code here:
        jpCliente.setEnabled(false);
    }//GEN-LAST:event_jpClienteMouseClicked

    private void btPesquisaDetalhadaCliente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaDetalhadaCliente1ActionPerformed
        // TODO add your handling code here:
        List<Medico> med;

        int codCliente = Integer.parseInt(cod);
        String nome = tfNomeCliente.getText();
        String cidade = cbCidadeNomeCliente.getSelectedItem().toString();
        String especialidade = cbEspecialidadeNomeCliente.getSelectedItem().toString();
        boolean rb1 = rbtContemCliente.isSelected();
        boolean rb2 = rbtPrimeiroNomeCliente.isSelected();

        boolean flag = false;
        if (nome.equals("")) {
            JOptionPane.showMessageDialog(null, "Campo Nome deve ser preenchido");
            flag = true;
        }

        if (cidade == "<Selecione>") {
            JOptionPane.showMessageDialog(null, "Selecione uma cidade");
            flag = true;
        }

        if ((rb1 == false) && (rb2 == false)) {
            JOptionPane.showMessageDialog(null, "Selecione um tipo de busca");
            flag = true;

        }

        if (flag == false) {
            ControleBuscaMedico controlb = new ControleBuscaMedico(nome, cidade, especialidade, codCliente, 0, rb1, rb2);
            try {
                controlb.runBuscaMedicoCliente();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            med = controlb.getMed();
            tfNomeCliente.setText("");
            new ResultadoMedico(this, med).setVisible(true);
        }
    }//GEN-LAST:event_btPesquisaDetalhadaCliente1ActionPerformed

    private void cbEspecialidadeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEspecialidadeClienteActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbEspecialidadeClienteActionPerformed

    private void cbAtendimentoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAtendimentoClienteActionPerformed
        // TODO add your handling code here:
        if (cbAtendimentoCliente.getSelectedItem().toString().equals("Hospital")) {
            cbEspecialidadeCliente.setEnabled(false);
        } else {
            if (cbAtendimentoCliente.getSelectedItem().toString().equals("Clinica")) {
                cbEspecialidadeCliente.setEnabled(true);
            }
        }

    }//GEN-LAST:event_cbAtendimentoClienteActionPerformed

    private void cbCidadeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCidadeClienteActionPerformed
        // cbRegiaoCliente.setEnabled(false);
        if (cbCidadeCliente.getSelectedItem().toString().equals("Sorocaba")) {
            cbRegiaoCliente.removeAllItems();
            cbRegiaoCliente.addItem("<Selecione>");
            cbRegiaoCliente.addItem("Centro");
            cbRegiaoCliente.addItem("Campolim");
            cbRegiaoCliente.addItem("Vila Haro");
            cbRegiaoCliente.addItem("Central Parque");
            cbRegiaoCliente.addItem("Trujilo");
            cbRegiaoCliente.setEnabled(true);
        } else {
            if (cbCidadeCliente.getSelectedItem().toString().equals("Itu")) {
                cbRegiaoCliente.removeAllItems();
                cbRegiaoCliente.addItem("<Selecione>");
                cbRegiaoCliente.addItem("Centro");
                cbRegiaoCliente.addItem("Zona Sul");
                cbRegiaoCliente.setEnabled(true);
            } else {
                if (cbCidadeCliente.getSelectedItem().toString().equals("Votorantim")) {
                    cbRegiaoCliente.removeAllItems();
                    cbRegiaoCliente.addItem("<Selecione>");
                    cbRegiaoCliente.addItem("Zona Leste");
                    cbRegiaoCliente.addItem("Centro");
                    cbRegiaoCliente.addItem("Zona Norte");
                    cbRegiaoCliente.addItem("Zona Sul");
                    cbRegiaoCliente.setEnabled(true);

                }
            }
        }
    }//GEN-LAST:event_cbCidadeClienteActionPerformed

    private void tfNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNomeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNomeClienteActionPerformed

    private void btValidarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btValidarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Busca b = new Busca();
            Cliente c = new Cliente(null, null, 0, 0, null, null, null, 0, 0, 0);
            if ((!(jtfCartao.getText().equals(""))) && (!(Integer.parseInt(jtfCartao.getText()) <= 0))) {
                cod = jtfCartao.getText();
                System.out.printf("%s\n", cod);
                int codCartao = Integer.parseInt(cod);
                try {
                    c = b.getDadosCliente(codCartao);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                if (c != null) {
                    jpTabPesquisaCliente.setVisible(true);
                    //jpIdentifica.setEnabled(false);
                    jlCodCartao.setText(cod);
                    jlNomePaciente.setText(c.getNome());
                    if (c.getPlano() == 1) {
                        jlTipoPlano.setText("Plano BÃ¡sico");
                    } else {
                        if (c.getPlano() == 2) {
                            jlTipoPlano.setText("Plano Completo");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Cliente nao encontrado");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Codigo InvÃ¡lido");
            }
            jtfCartao.setText("");
        }
        cbAtendimentoCliente.setSelectedIndex(0);
        cbCidadeCliente.setSelectedIndex(0);
        cbEspecialidadeCliente.setSelectedIndex(0);
        cbRegiaoCliente.setSelectedIndex(0);
    }//GEN-LAST:event_btValidarKeyPressed

    private void jtfCartaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCartaoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Busca b = new Busca();
            Cliente c = new Cliente(null, null, 0, 0, null, null, null, 0, 0, 0);
            if ((!(jtfCartao.getText().equals(""))) && (!(Integer.parseInt(jtfCartao.getText()) <= 0))) {
                cod = jtfCartao.getText();
                System.out.printf("%s\n", cod);
                int codCartao = Integer.parseInt(cod);
                try {
                    c = b.getDadosCliente(codCartao);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                if (c != null) {
                    jpTabPesquisaCliente.setVisible(true);
                    //jpIdentifica.setEnabled(false);
                    jlCodCartao.setText(cod);
                    jlNomePaciente.setText(c.getNome());
                    if (c.getPlano() == 1) {
                        jlTipoPlano.setText("Plano BÃ¡sico");
                    } else {
                        if (c.getPlano() == 2) {
                            jlTipoPlano.setText("Plano Completo");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Cliente nao encontrado");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Codigo InvÃ¡lido");
            }
            jtfCartao.setText("");
        }
        cbAtendimentoCliente.setSelectedIndex(0);
        cbCidadeCliente.setSelectedIndex(0);
        cbEspecialidadeCliente.setSelectedIndex(0);
        cbRegiaoCliente.setSelectedIndex(0);
    }//GEN-LAST:event_jtfCartaoKeyPressed

    private void jbSairKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbSairKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            System.exit(0);
        }
    }//GEN-LAST:event_jbSairKeyPressed

    private void btPesquisaDetalhadaClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btPesquisaDetalhadaClienteKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (cbAtendimentoCliente.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Insira o tipo de antendimento para fazer a busca");
            }

        }
    }//GEN-LAST:event_btPesquisaDetalhadaClienteKeyPressed

    private void cbAtendimentoNaoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAtendimentoNaoClienteActionPerformed
        // TODO add your handling code here:
        if (cbAtendimentoNaoCliente.getSelectedItem().toString().equals("Hospital")) {
            cbEspecialidadeNaoCliente.setEnabled(false);
        } else {
            if (cbAtendimentoNaoCliente.getSelectedItem().toString().equals("Clinica")) {
                cbEspecialidadeNaoCliente.setEnabled(true);
            }
        }
    }//GEN-LAST:event_cbAtendimentoNaoClienteActionPerformed

    private void cbCidadeNaoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCidadeNaoClienteActionPerformed
        // TODO add your handling code here:

        if (cbCidadeNaoCliente.getSelectedItem().toString().equals("Sorocaba")) {
            cbRegiaoNaoCliente.removeAllItems();
            cbRegiaoNaoCliente.addItem("<Selecione>");
            cbRegiaoNaoCliente.addItem("Centro");
            cbRegiaoNaoCliente.addItem("Campolim");
            cbRegiaoNaoCliente.addItem("Trujilo");
            cbRegiaoNaoCliente.addItem("Central Parque");
            cbRegiaoNaoCliente.addItem("Vila Haro");
            cbRegiaoNaoCliente.setEnabled(true);
        } else {
            if (cbCidadeNaoCliente.getSelectedItem().toString().equals("Itu")) {
                cbRegiaoNaoCliente.removeAllItems();
                cbRegiaoNaoCliente.addItem("<Selecione>");
                cbRegiaoNaoCliente.addItem("Zona Sul");
                cbRegiaoNaoCliente.addItem("Centro");
                cbRegiaoNaoCliente.setEnabled(true);
            } else {
                if (cbCidadeNaoCliente.getSelectedItem().toString().equals("Votorantim")) {
                    cbRegiaoNaoCliente.removeAllItems();
                    cbRegiaoNaoCliente.addItem("<Selecione>");
                    cbRegiaoNaoCliente.addItem("Zona Leste");
                    cbRegiaoNaoCliente.addItem("Centro");
                    cbRegiaoNaoCliente.addItem("Zona Norte");
                    cbRegiaoNaoCliente.addItem("Zona Sul");
                    cbRegiaoNaoCliente.setEnabled(true);

                }
            }
        }
    }//GEN-LAST:event_cbCidadeNaoClienteActionPerformed

    private void cbEspecialidadeNaoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEspecialidadeNaoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbEspecialidadeNaoClienteActionPerformed

    private void cbRegiaoNaoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRegiaoNaoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbRegiaoNaoClienteActionPerformed

    private void btPesquisaDetalhadaNaoCliente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaDetalhadaNaoCliente1ActionPerformed
        // TODO add your handling code here:
        List<Hospital> hosp;
        List<Clinica> clin;
        if (cbAtendimentoNaoCliente.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Insira o tipo de antendimento para fazer a busca");
        }

        int plano = cbPlano.getSelectedIndex();
        String especialidade = cbEspecialidadeNaoCliente.getSelectedItem().toString();
        String atendimento = cbAtendimentoNaoCliente.getSelectedItem().toString();
        String cidade = cbCidadeNaoCliente.getSelectedItem().toString();
        String zona = cbRegiaoNaoCliente.getSelectedItem().toString();

        ControleBusca control = new ControleBusca(0, plano, atendimento, especialidade, cidade, zona);
        try {
            control.runBuscaInstituicaoNaoCliente();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        System.out.println(atendimento);
        if (atendimento.equals("Hospital")) {
            hosp = control.getHosp();
            new ResultadoInstituicao(this, hosp, null).setVisible(true);
        } else {
            if (atendimento.equals("Clinica")) {
                clin = control.getClin();
                for (Clinica c : control.getClin()) {
                    System.out.println(c.getNome());
                }
                new ResultadoInstituicao(this, null, clin).setVisible(true);
            }
        }

    }//GEN-LAST:event_btPesquisaDetalhadaNaoCliente1ActionPerformed

    private void btPesquisaDetalhadaNaoCliente1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btPesquisaDetalhadaNaoCliente1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btPesquisaDetalhadaNaoCliente1KeyPressed

    private void rbtContemNaoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtContemNaoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtContemNaoClienteActionPerformed

    private void rbtPrimeiroNomeNaoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtPrimeiroNomeNaoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtPrimeiroNomeNaoClienteActionPerformed

    private void tfNomeNaoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNomeNaoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNomeNaoClienteActionPerformed

    private void tfNomeNaoClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNomeNaoClienteKeyTyped
        // TODO add your handling code here:
        String caracteres = "0987654321!{}@.,#;$%/()[]*\\+-=_<>-?:|Â¬Â¢Â¹Â²Â³Â§'";
        if (caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_tfNomeNaoClienteKeyTyped

    private void btPesquisaDetalhadaNaoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaDetalhadaNaoClienteActionPerformed
        // TODO add your handling code here:
        List<Medico> med;
        int codPlano = cbPlano.getSelectedIndex();
        String nome = tfNomeNaoCliente.getText();
        String cidade = cbCidadeNomeNaoCliente.getSelectedItem().toString();
        String especialidade = cbEspecialidadeNomeNaoCliente.getSelectedItem().toString();
        boolean rb1 = rbtContemNaoCliente.isSelected();
        boolean rb2 = rbtPrimeiroNomeNaoCliente.isSelected();

        boolean flag = false;
        if (nome.equals("")) {
            JOptionPane.showMessageDialog(null, "Campo Nome deve ser preenchido");
            flag = true;
        }

        if (cidade == "<Selecione>") {
            JOptionPane.showMessageDialog(null, "Selecione uma cidade");
            flag = true;
        }

        if ((rb1 == false) && (rb2 == false)) {
            JOptionPane.showMessageDialog(null, "Selecione um tipo de busca");
            flag = true;

        }

        if (flag == false) {
            ControleBuscaMedico controlb = new ControleBuscaMedico(nome, cidade, especialidade, 0, codPlano, rb1, rb2);
            try {
                controlb.runBuscaMedicoNaoCliente();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            med = controlb.getMed();
            tfNomeNaoCliente.setText("");
            new ResultadoMedico(this, med).setVisible(true);
        }
    }//GEN-LAST:event_btPesquisaDetalhadaNaoClienteActionPerformed

    private void jpTabPesquisaClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpTabPesquisaClienteMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jpTabPesquisaClienteMouseClicked

    private void jpPesqueisaNaoClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpPesqueisaNaoClienteMouseClicked
        // TODO add your handling code here:
        jpTabPesquisaNaoCliente.setVisible(true);
    }//GEN-LAST:event_jpPesqueisaNaoClienteMouseClicked

    private void cbCidadeNomeNaoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCidadeNomeNaoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCidadeNomeNaoClienteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiaMedicoMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiaMedicoMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiaMedicoMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiaMedicoMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiaMedicoMain().setVisible(true);
            }
        });
    }

    private String cod = "0";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btPesquisaDetalhadaCliente;
    private javax.swing.JButton btPesquisaDetalhadaCliente1;
    private javax.swing.JButton btPesquisaDetalhadaNaoCliente;
    private javax.swing.JButton btPesquisaDetalhadaNaoCliente1;
    private javax.swing.JButton btValidar;
    private javax.swing.ButtonGroup btgPesquisaNome;
    private javax.swing.JComboBox cbAtendimentoCliente;
    private javax.swing.JComboBox cbAtendimentoNaoCliente;
    private javax.swing.JComboBox cbCidadeCliente;
    private javax.swing.JComboBox cbCidadeNaoCliente;
    private javax.swing.JComboBox cbCidadeNomeCliente;
    private javax.swing.JComboBox cbCidadeNomeNaoCliente;
    private javax.swing.JComboBox cbEspecialidadeCliente;
    private javax.swing.JComboBox cbEspecialidadeNaoCliente;
    private javax.swing.JComboBox cbEspecialidadeNomeCliente;
    private javax.swing.JComboBox cbEspecialidadeNomeNaoCliente;
    private javax.swing.JComboBox cbPlano;
    private javax.swing.JComboBox cbRegiaoCliente;
    private javax.swing.JComboBox cbRegiaoNaoCliente;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton jbSair;
    private javax.swing.JLabel jlCodCartao;
    private javax.swing.JLabel jlNomePaciente;
    private javax.swing.JLabel jlTipoPlano;
    private javax.swing.JPanel jpCliente;
    private javax.swing.JTabbedPane jpIdentifica;
    private javax.swing.JPanel jpLogo;
    private javax.swing.JPanel jpNaoCliente;
    private javax.swing.JPanel jpPesqueisaNaoCliente;
    private javax.swing.JPanel jpPesquisaCliente;
    private javax.swing.JPanel jpPesquisaDetalhadaCliente;
    private javax.swing.JPanel jpPesquisaDetalhadaNaoCliente;
    private javax.swing.JPanel jpPesquisaNome;
    private javax.swing.JPanel jpPesquisaNomeNaoCliente;
    private javax.swing.JPanel jpSair;
    private javax.swing.JTabbedPane jpTabPesquisaCliente;
    private javax.swing.JTabbedPane jpTabPesquisaNaoCliente;
    private javax.swing.JFormattedTextField jtfCartao;
    private javax.swing.JLabel lbAtendimentoCliente;
    private javax.swing.JLabel lbAtendimentoNaoCliente;
    private javax.swing.JLabel lbCartao;
    private javax.swing.JLabel lbCidadeCliente;
    private javax.swing.JLabel lbCidadeNaoCliente;
    private javax.swing.JLabel lbEspecialidadeCliente;
    private javax.swing.JLabel lbEspecialidadeNaoCliente;
    private javax.swing.JLabel lbEspecialidadeNomeNaoCliente1;
    private javax.swing.JLabel lbEspecialidadeNomeNaoCliente2;
    private javax.swing.JLabel lbLogoImg;
    private javax.swing.JLabel lbNomeCidadeCliente;
    private javax.swing.JLabel lbNomeCidadeNaoCliente;
    private javax.swing.JLabel lbNomeCliente;
    private javax.swing.JLabel lbNomeNaoCliente;
    private javax.swing.JLabel lbPlano;
    private javax.swing.JLabel lbRegiaoCliente;
    private javax.swing.JLabel lbRegiaoNaoCliente;
    private javax.swing.JRadioButton rbtContemCliente;
    private javax.swing.JRadioButton rbtContemNaoCliente;
    private javax.swing.JRadioButton rbtPrimeiroNomeCliente;
    private javax.swing.JRadioButton rbtPrimeiroNomeNaoCliente;
    private javax.swing.JTextField tfNomeCliente;
    private javax.swing.JTextField tfNomeNaoCliente;
    // End of variables declaration//GEN-END:variables
}
